%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1  
#llh 调整为小车输出的话题名
imu_topic: "/imu"
image0_topic: "/usb_cam/image_raw"
image1_topic: "/cam1/image_raw"
output_path: "~/output"         #llh去掉了最后的/

cam0_calib: "cam0_pinhole_ucar.yaml"
cam1_calib: "cam1_pinhole.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
#llh 外参先验标志位设定为2，表示没有任何先验信息
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   #llh:注意，写矩阵必须要对齐，不然无法读取！！！！
   #第二次标定结果的T_ic
   data: [-0.02877766, -0.16557847,  0.98577666, -0.00005171,
            -0.99822499,  0.05620281, -0.01970082,  0.00006469,
            -0.05214139, -0.98459383, -0.16690195,  0.00017019,
            0.,          0.,          0.,          1.        ]
   #第一次标定结果的T_ic
   # data: [-0.0127607,    -0.162447,     0.986635,  2.06666e-05, 
   #      -0.999768,    0.0191944,  -0.00977025, -4.00709e-05,
   #      -0.0173507,    -0.986531,    -0.162654,  0.000155791,
   #      0,           0,           0,            1.0]
   # data: [ -0.012760698087232264, -0.9997680319126017, -0.017350704594662925, -3.7094785006770234e-05,
   #      -0.1624466267468736, 0.019194386247671197, -0.9865306224315283, 0.00015781880235092872,
   #      0.9866348149355414, -0.009770255993573618, -0.16265387808143894, 4.5581345734142436e-06,
   #      0.0, 0.0, 0.0, 1.0] 
#    [0.0148655429818, -0.999880929698, 0.00414029679422, -0.0216401454975,
#            0.999557249008, 0.0149672133247, 0.025715529948,  -0.064676986768,
#            -0.0257744366974, 0.00375618835797, 0.999660727178, 0.00981073058949,
#            0, 0, 0, 1]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.00559362252472972          # accelerometer measurement noise standard deviation. 
gyr_n: 0.00047320365991403526         # gyroscope measurement noise standard deviation.     
acc_w: 0.00023250115387348684        # accelerometer bias random work noise standard deviation.  
gyr_w: 2.3374135016483867e-05       # gyroscope bias random work noise standard deviation.     
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters 不同步的参数
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0 #-0.019719651755712296           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
